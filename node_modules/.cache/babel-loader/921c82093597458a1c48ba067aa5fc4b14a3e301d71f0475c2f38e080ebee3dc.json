{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maxff\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\semen 5\\\\KPO\\\\kpo\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport './Styles/App.css';\nimport PostItem from \"./Componets/PostItem\";\nimport PostList from \"./Componets/PostList\";\nimport Counter from \"./Componets/Counter\";\nimport MyButton from \"./Componets/UI/buttons/MyButton\";\nimport MyInput from \"./Componets/UI/inputs/MyInput\";\nimport PostForm from \"./Componets/PostForm\";\nimport MySelect from \"./Componets/UI/selects/MySelect\";\nimport { useMemo } from \"react\";\nimport PostFilter from \"./Componets/PostFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([{\n    id: 1,\n    description: 'q',\n    title: 'Javascript'\n  }, {\n    id: 2,\n    description: 'w',\n    title: 'Python'\n  }, {\n    id: 3,\n    description: 'e',\n    title: 'C#'\n  }, {\n    id: 4,\n    description: 'r',\n    title: 'Angular'\n  }]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const sortedPosts = useMemo(() => {\n    console.log('hueta otrabotala');\n    if (filter.sort) {\n      return [...posts].sort((a, b) => a[filter.sort].localeCompare(b[filter.sort]));\n    }\n    return posts;\n  }, [filter.sort, posts]);\n  const sortedAndSearchedPosts = useMemo(() => {\n    return sortedPosts.filter(post => post.title.toLowerCase().includes(filter.query.toLowerCase()));\n  }, [filter.query, sortedPosts]);\n\n  // const [count, SetCount] = useState(0);\n  // const [value, SetValue] = useState(0);\n\n  // function increment(){\n  //   SetCount(count + 1);\n  // }\n\n  // function decrement(){\n  //   SetCount(count  - 1);\n  // }\n\n  // const [title, setTitle] = useState(\"\");\n  // const [description, setDescription] = useState(\"\");\n\n  // const bodyInputRef = useRef();\n\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n  };\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id)); //идет проверка id, если id совпадает с тем, который мы передвли, то мы его удаляем \n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(PostForm, {\n      create: createPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: '15px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: set\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u0441\\u0442\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bLfivn3ttLqIsyhHL1F8oP1jyTk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","PostItem","PostList","Counter","MyButton","MyInput","PostForm","MySelect","useMemo","PostFilter","jsxDEV","_jsxDEV","App","_s","posts","setPosts","id","description","title","filter","setFilter","sort","query","sortedPosts","console","log","a","b","localeCompare","sortedAndSearchedPosts","post","toLowerCase","includes","createPost","newPost","removePost","p","className","children","create","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","set","remove","_c","$RefreshReg$"],"sources":["C:/Users/maxff/OneDrive/Рабочий стол/semen 5/KPO/kpo/src/App.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport './Styles/App.css';\nimport PostItem from \"./Componets/PostItem\";\nimport PostList from \"./Componets/PostList\";\nimport Counter from \"./Componets/Counter\";\nimport MyButton from \"./Componets/UI/buttons/MyButton\";\nimport MyInput from \"./Componets/UI/inputs/MyInput\";\nimport PostForm from \"./Componets/PostForm\";\nimport MySelect from \"./Componets/UI/selects/MySelect\";\nimport { useMemo } from \"react\";\nimport PostFilter from \"./Componets/PostFilter\";\n\nfunction App() {\n  const [posts, setPosts] = useState([\n    { id: 1, description: 'q', title: 'Javascript' },\n    { id: 2, description: 'w', title: 'Python' },\n    { id: 3, description: 'e', title: 'C#' },\n    { id: 4, description: 'r', title: 'Angular' }\n  ])\n\n  const [filter, setFilter] = useState({ sort: '', query: '' });\n\n  const sortedPosts = useMemo(() => {\n    console.log('hueta otrabotala');\n    if (filter.sort) {\n      return [...posts].sort((a, b) => a[filter.sort].localeCompare(b[filter.sort]));\n    }\n    return posts;\n  }, [filter.sort, posts])\n\n  const sortedAndSearchedPosts = useMemo(() => {\n    return sortedPosts.filter(post => post.title.toLowerCase().includes(filter.query.toLowerCase()))\n  }, [filter.query, sortedPosts])\n\n  // const [count, SetCount] = useState(0);\n  // const [value, SetValue] = useState(0);\n\n  // function increment(){\n  //   SetCount(count + 1);\n  // }\n\n  // function decrement(){\n  //   SetCount(count  - 1);\n  // }\n\n  // const [title, setTitle] = useState(\"\");\n  // const [description, setDescription] = useState(\"\");\n\n  // const bodyInputRef = useRef();\n\n  const createPost = (newPost) => {\n    setPosts([...posts, newPost]);\n  }\n\n  const removePost = (post) => {\n    setPosts(posts.filter(p => p.id !== post.id)) //идет проверка id, если id совпадает с тем, который мы передвли, то мы его удаляем \n  }\n\n  return (\n    <div className=\"App\">\n      <PostForm create={createPost} />\n      <hr style={{ margin: '15px 0' }} />\n      <PostFilter filter={filter} setFilter={set} />\n      <PostList remove={removePost} posts={sortedAndSearchedPosts} title=\"Список постов\" />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}