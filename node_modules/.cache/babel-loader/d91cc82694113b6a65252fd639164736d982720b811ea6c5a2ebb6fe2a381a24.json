{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maxff\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\semen 5\\\\KPO\\\\kpo\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport './Styles/App.css';\nimport PostItem from \"./Componets/PostItem\";\nimport PostList from \"./Componets/PostList\";\nimport Counter from \"./Componets/Counter\";\nimport MyButton from \"./Componets/UI/buttons/MyButton\";\nimport MyInput from \"./Componets/UI/inputs/MyInput\";\nimport PostForm from \"./Componets/PostForm\";\nimport MySelect from \"./Componets/UI/selects/MySelect\";\nimport { useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([{\n    id: 1,\n    description: 'q',\n    title: 'Javascript'\n  }, {\n    id: 2,\n    description: 'w',\n    title: 'Python'\n  }, {\n    id: 3,\n    description: 'e',\n    title: 'C#'\n  }, {\n    id: 4,\n    description: 'r',\n    title: 'Angular'\n  }]);\n  const [selectedSort, SetSelectedSort] = useState(\"\");\n  const [searchQuery, SetSearchQuery] = useState(\"\");\n  const sortedPosts = useMemo(() => {\n    console.log('hueta otrabotala');\n    if (selectedSort) {\n      return [...posts].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]));\n    }\n    return posts;\n  }, [selectedSort, posts]);\n  const sortedAndSearchedPosts = useMemo(() => {}, [searchQuery, sortedPosts]);\n\n  // const [count, SetCount] = useState(0);\n  // const [value, SetValue] = useState(0);\n\n  // function increment(){\n  //   SetCount(count + 1);\n  // }\n\n  // function decrement(){\n  //   SetCount(count  - 1);\n  // }\n\n  // const [title, setTitle] = useState(\"\");\n  // const [description, setDescription] = useState(\"\");\n\n  // const bodyInputRef = useRef();\n\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n  };\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id)); //идет проверка id, если id совпадает с тем, который мы передвли, то мы его удаляем \n  };\n\n  const sortPosts = sort => {\n    SetSelectedSort(sort); // мутируем копию массива, а не напрямую сам массив posts\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(PostForm, {\n      create: createPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          margin: '15px 0'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(MyInput, {\n          value: searchQuery,\n          onChange: e => SetSearchQuery(e.target.value),\n          placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n          defaultValue: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\",\n          value: selectedSort,\n          onChange: sortPosts,\n          options: [{\n            value: 'title',\n            name: 'По значению'\n          }, {\n            value: 'description',\n            name: 'По описанию'\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), posts.length !== 0 ? /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u0441\\u0442\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Posts are missing!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 118\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5P/bhkKJz9HFN1NwWwQC4CIcJoY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","PostItem","PostList","Counter","MyButton","MyInput","PostForm","MySelect","useMemo","jsxDEV","_jsxDEV","App","_s","posts","setPosts","id","description","title","selectedSort","SetSelectedSort","searchQuery","SetSearchQuery","sortedPosts","console","log","sort","a","b","localeCompare","sortedAndSearchedPosts","createPost","newPost","removePost","post","filter","p","sortPosts","className","children","create","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","value","onChange","e","target","placeholder","defaultValue","options","name","length","remove","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/maxff/OneDrive/Рабочий стол/semen 5/KPO/kpo/src/App.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport './Styles/App.css';\nimport PostItem from \"./Componets/PostItem\";\nimport PostList from \"./Componets/PostList\";\nimport Counter from \"./Componets/Counter\";\nimport MyButton from \"./Componets/UI/buttons/MyButton\";\nimport MyInput from \"./Componets/UI/inputs/MyInput\";\nimport PostForm from \"./Componets/PostForm\";\nimport MySelect from \"./Componets/UI/selects/MySelect\";\nimport { useMemo } from \"react\";\n\nfunction App() {\n  const [posts, setPosts] = useState([\n    { id: 1, description: 'q', title: 'Javascript' },\n    { id: 2, description: 'w', title: 'Python' },\n    { id: 3, description: 'e', title: 'C#' },\n    { id: 4, description: 'r', title: 'Angular' }\n  ])\n\n  const [selectedSort, SetSelectedSort] = useState(\"\");\n  const [searchQuery, SetSearchQuery] = useState(\"\");\n\n  const sortedPosts = useMemo(()=>{\n    console.log('hueta otrabotala');\n    if(selectedSort){\n      return [...posts].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]));\n    }\n    return posts;\n  }, [selectedSort, posts])\n\n  const sortedAndSearchedPosts = useMemo(() => {\n\n  }, [searchQuery, sortedPosts])\n\n  // const [count, SetCount] = useState(0);\n  // const [value, SetValue] = useState(0);\n\n  // function increment(){\n  //   SetCount(count + 1);\n  // }\n\n  // function decrement(){\n  //   SetCount(count  - 1);\n  // }\n\n  // const [title, setTitle] = useState(\"\");\n  // const [description, setDescription] = useState(\"\");\n\n  // const bodyInputRef = useRef();\n\n  const createPost = (newPost) => {\n    setPosts([...posts, newPost]);\n  }\n\n  const removePost = (post) => {\n    setPosts(posts.filter(p => p.id !== post.id)) //идет проверка id, если id совпадает с тем, который мы передвли, то мы его удаляем \n  }\n\n  const sortPosts = (sort) => {\n    SetSelectedSort(sort); // мутируем копию массива, а не напрямую сам массив posts\n  }\n\n  return (\n    <div className=\"App\">\n      <PostForm create={createPost} />\n      <div>\n        <hr style={{ margin: '15px 0' }} />\n        <div className=\"\">\n          <MyInput\n            value={searchQuery}\n            onChange={e => SetSearchQuery(e.target.value)}\n            placeholder=\"Поиск...\"\n          />\n          <MySelect\n            defaultValue='Сортировка'\n            value={selectedSort}\n            onChange={sortPosts}\n            options={\n              [{\n                value: 'title',\n                name: 'По значению'\n              },\n              {\n                value: 'description',\n                name: 'По описанию'\n              }\n              ]\n            }\n          />\n        </div>\n      </div>\n\n      {\n        posts.length !== 0 ? <PostList remove={removePost} posts={sortedAndSearchedPosts} title=\"Список постов\" /> : <h2 style={{ textAlign: \"center\" }}>Posts are missing!</h2>\n      }\n\n\n      {/* <h1>{count}</h1>\n      <h1>{value}</h1>\n      <input type=\"text\" value={value} onChange={event => SetValue(event.target.value)}></input>\n      <button onClick={increment}>Increment</button>\n      <button onClick={decrement}>Decremect</button> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}